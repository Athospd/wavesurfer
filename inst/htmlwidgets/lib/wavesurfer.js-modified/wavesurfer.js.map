{"version":3,"sources":["webpack://WaveSurfer/webpack/universalModuleDefinition","webpack://WaveSurfer/webpack/bootstrap","webpack://WaveSurfer/./node_modules/debounce/index.js","webpack://WaveSurfer/./src/drawer.canvasentry.js","webpack://WaveSurfer/./src/drawer.js","webpack://WaveSurfer/./src/drawer.multicanvas.js","webpack://WaveSurfer/./src/mediaelement.js","webpack://WaveSurfer/./src/peakcache.js","webpack://WaveSurfer/./src/util/ajax.js","webpack://WaveSurfer/./src/util/extend.js","webpack://WaveSurfer/./src/util/fetch.js","webpack://WaveSurfer/./src/util/frame.js","webpack://WaveSurfer/./src/util/get-id.js","webpack://WaveSurfer/./src/util/index.js","webpack://WaveSurfer/./src/util/max.js","webpack://WaveSurfer/./src/util/min.js","webpack://WaveSurfer/./src/util/observer.js","webpack://WaveSurfer/./src/util/prevent-click.js","webpack://WaveSurfer/./src/util/request-animation-frame.js","webpack://WaveSurfer/./src/util/style.js","webpack://WaveSurfer/./src/wavesurfer.js","webpack://WaveSurfer/./src/webaudio.js"],"names":["CanvasEntry","wave","waveCtx","progress","progressCtx","start","end","id","constructor","name","toLowerCase","element","getContext","elementWidth","totalWidth","width","height","offsetLeft","elementSize","hasProgressCanvas","clearRect","canvas","waveColor","progressColor","fillStyle","x","y","fillRectToContext","ctx","fillRect","peaks","absmax","halfH","offsetY","drawLineToContext","length","first","Math","round","last","canvasStart","canvasEnd","scale","halfOffset","absmaxHalf","beginPath","moveTo","lineTo","i","peak","h","halfPixel","j","closePath","fill","format","quality","type","Promise","resolve","toBlob","toDataURL","Drawer","container","params","pixelRatio","lastPos","wrapper","el","styles","util","style","appendChild","document","createElement","display","position","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","hideScrollbar","overflowY","setupWrapperEvents","e","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","nominalWidth","parentWidth","getWidth","rtl","right","left","scrollLeft","scrollWidth","addEventListener","scrollbarHeight","offsetHeight","clientHeight","clientY","bottom","interact","fireEvent","handleEvent","buffer","setWidth","clearWave","visualization","drawSpectrogram","barWidth","drawBars","drawWave","percent","recenterOnPosition","immediate","half","clientWidth","maxScroll","target","offset","rate","max","min","updateSize","minPxDelta","pos","autoCenter","newPos","updateProgress","unAll","parentNode","removeChild","channelIndex","duration","frequenciesData","getFrequencies","pixels","resample","heightFactor","waveCc","c","canvases","getFrequencyRGB","Observer","FFT","bufferSize","sampleRate","windowFunc","alpha","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","real","imag","bSi","sqrt","rval","ival","mag","spectrum","k","floor","log","LN2","halfSize","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","fftStep","N","MultiCanvas","maxCanvasWidth","maxCanvasElementWidth","progressWave","EntryClass","overlap","ceil","createWrapper","createElements","zIndex","top","overflow","boxSizing","borderRightStyle","pointerEvents","addCanvas","updateCursor","borderRightWidth","cursorWidth","borderRightColor","cursorColor","requiredCanvases","removeCanvas","canvasWidth","lastCanvas","forEach","entry","updateDimensions","leftOffset","initWave","initProgress","push","lastEntry","parentElement","destroy","pop","prepareDraw","hasMinVals","peakIndexScale","bar","gap","barGap","step","reflectedPeaks","len","drawLine","setFillStyles","drawLines","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRects","fn","frame","Array","channels","splitChannels","setHeight","channelPeaks","barHeight","normalize","some","call","val","all","map","getImage","images","colorValue","colorMap","rgb","colormaps","fftSamples","channelOne","prototype","slice","getChannelData","bufferLength","frequencies","noverlap","uniqueSamplesPerPx","fft","maxSlicesCount","currentOffset","segment","array","Uint8Array","log10","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","oldStart","oldEnd","newStart","newEnd","intColumn","MediaElement","media","currentTime","paused","playbackRate","play","pause","volume","mediaType","elementPosition","isMuted","onPlayEnd","setPlaybackRate","audioRate","createTimer","onAudioProcess","isPaused","getCurrentTime","on","url","preload","controls","mediaControls","autoplay","src","prevMedia","querySelector","_load","elt","load","event","muted","setVolume","explicitDuration","Infinity","seekable","getDuration","value","clearPlayEnd","seekTo","promise","setPlayEnd","_onPlayEnd","time","un","deviceId","setSinkId","reject","removeMediaElementOnDestroy","WebAudio","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","filter","item","arr","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs","ajax","options","instance","xhr","XMLHttpRequest","fired100","open","method","responseType","requestHeaders","header","setRequestHeader","key","withCredentials","lengthComputable","loaded","total","status","response","send","extend","dest","sources","source","Object","keys","ProgressHandler","contentLength","_reader","body","getReader","parseInt","controller","read","then","done","onProgress","close","byteLength","enqueue","catch","error","fetchFile","fetchHeaders","Headers","fetchRequest","Request","AbortController","append","fetchOptions","headers","mode","credentials","cache","redirect","referrer","signal","fetch","progressAvailable","get","Response","ReadableStream","errMsg","ok","arrayBuffer","json","blob","text","func","args","getId","prefix","random","toString","substring","values","largest","smallest","Number","handlers","callback","splice","handler","apply","setTimeout","preventClickHandler","stopPropagation","removeEventListener","preventClick","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","bind","prop","PluginClass","ws","WaveSurfer","wavesurfer","init","defaultParams","audioContext","audioScriptProcessor","backend","backgroundColor","dragSelection","forceDecode","loopSelection","mediaContainer","minPxPerSec","partialRender","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","renderer","responsive","skipLength","backends","transform","setBackgroundColor","savedVolume","tmpEvents","currentRequest","arraybuffer","drawer","peakCache","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","registerPlugins","createDrawer","createBackend","createPeakCache","plugin","addPlugin","deferInit","initPlugin","staticProps","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","destroyPlugin","drawBuffer","getPlayedPercents","supportsWebAudio","newVolume","getVolume","seconds","skip","seekAndCenter","recenter","isFinite","oldScrollParent","getPlaybackRate","setMute","mute","filters","color","background","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","data","loadDecodedBuffer","reader","FileReader","loadArrayBuffer","result","readAsArrayBuffer","empty","preloadIgnoreReasons","indexOf","activeReasons","reason","console","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","loadElt","err","request","message","percentComplete","accuracy","noWindow","JSON","stringify","encodeURIComponent","abort","stop","disconnectSource","cancelAjax","clearTmpEvents","destroyAllPlugins","VERSION","__VERSION__","PLAYING","PAUSED","FINISHED","AudioContext","webkitAudioContext","WaveSurferAudioContext","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","offlineAudioContext","stateBehaviors","addOnAudioProcess","startPosition","getPlayedTime","removeOnAudioProcess","ac","getAudioContext","lastPlay","scheduledPause","states","create","analyser","gainNode","mergedPeaks","offlineAc","scriptNode","splitPeaks","state","createVolumeNode","createScriptNode","createAnalyserNode","setState","setLength","disconnect","connect","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","createAnalyser","createGain","createGainNode","audio","Audio","createMediaStreamDestination","srcObject","stream","gain","setValueAtTime","errback","getOfflineAudioContext","decodeAudioData","numberOfChannels","newBuffer","createBuffer","sampleSize","sampleStep","chan","closeAudioContext","createSource","createBufferSource","noteGrainOn","noteOff","adjustedTime","resume"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;ACjEA;;AACA;;;;;;;;;;AAEA;;;;;;;IAOqBA,W;;;AACjB,yBAAc;AAAA;;AACV;;;;;AAKA,SAAKC,IAAL,GAAY,IAAZ;AACA;;;;;;AAKA,SAAKC,OAAL,GAAe,IAAf;AACA;;;;;;AAKA,SAAKC,QAAL,GAAgB,IAAhB;AACA;;;;;;AAKA,SAAKC,WAAL,GAAmB,IAAnB;AACA;;;;;;;AAMA,SAAKC,KAAL,GAAa,CAAb;AACA;;;;;;;AAMA,SAAKC,GAAL,GAAW,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","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/wavesurfer.js\");\n","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\nfunction debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n// Adds compatibility for ES modules\ndebounce.debounce = debounce;\n\nmodule.exports = debounce;\n","/**\n * @since 3.0.0\n */\n\nimport style from './util/style';\nimport getId from './util/get-id';\n\n/**\n * The `CanvasEntry` class represents an element consisting of a wave `canvas`\n * and an (optional) progress wave `canvas`.\n *\n * The `MultiCanvas` renderer uses one or more `CanvasEntry` instances to\n * render a waveform, depending on the zoom level.\n */\nexport default class CanvasEntry {\n    constructor() {\n        /**\n         * The wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.wave = null;\n        /**\n         * The wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.waveCtx = null;\n        /**\n         * The (optional) progress wave node\n         *\n         * @type {HTMLCanvasElement}\n         */\n        this.progress = null;\n        /**\n         * The (optional) progress wave canvas rendering context\n         *\n         * @type {CanvasRenderingContext2D}\n         */\n        this.progressCtx = null;\n        /**\n         * Start of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         * @private\n         */\n        this.start = 0;\n        /**\n         * End of the area the canvas should render, between 0 and 1\n         *\n         * @type {number}\n         * @private\n         */\n        this.end = 1;\n        /**\n         * Unique identifier for this entry\n         *\n         * @type {string}\n         */\n        this.id = getId(this.constructor.name.toLowerCase() + '_');\n    }\n\n    /**\n     * Store the wave canvas element and create the 2D rendering context\n     *\n     * @param {HTMLCanvasElement} element The wave `canvas` element.\n     */\n    initWave(element) {\n        this.wave = element;\n        this.waveCtx = this.wave.getContext('2d');\n    }\n\n    /**\n     * Store the progress wave canvas element and create the 2D rendering\n     * context\n     *\n     * @param {HTMLCanvasElement} element The progress wave `canvas` element.\n     */\n    initProgress(element) {\n        this.progress = element;\n        this.progressCtx = this.progress.getContext('2d');\n    }\n\n    /**\n     * Update the dimensions\n     *\n     * @param {number} elementWidth Width of the entry\n     * @param {number} totalWidth Total width of the multi canvas renderer\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(elementWidth, totalWidth, width, height) {\n        // where the canvas starts and ends in the waveform, represented as a\n        // decimal between 0 and 1\n        this.start = this.wave.offsetLeft / totalWidth || 0;\n        this.end = this.start + elementWidth / totalWidth;\n\n        // set wave canvas dimensions\n        this.wave.width = width;\n        this.wave.height = height;\n        let elementSize = { width: elementWidth + 'px' };\n        style(this.wave, elementSize);\n\n        if (this.hasProgressCanvas) {\n            // set progress canvas dimensions\n            this.progress.width = width;\n            this.progress.height = height;\n            style(this.progress, elementSize);\n        }\n    }\n\n    /**\n     * Clear the wave and progress rendering contexts\n     */\n    clearWave() {\n        // wave\n        this.waveCtx.clearRect(\n            0,\n            0,\n            this.waveCtx.canvas.width,\n            this.waveCtx.canvas.height\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            this.progressCtx.clearRect(\n                0,\n                0,\n                this.progressCtx.canvas.width,\n                this.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Set the fill styles for wave and progress\n     *\n     * @param {string} waveColor Fill color for the wave canvas\n     * @param {?string} progressColor Fill color for the progress canvas\n     */\n    setFillStyles(waveColor, progressColor) {\n        this.waveCtx.fillStyle = waveColor;\n\n        if (this.hasProgressCanvas) {\n            this.progressCtx.fillStyle = progressColor;\n        }\n    }\n\n    /**\n     * Draw a rectangle for wave and progress\n     *\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     */\n    fillRects(x, y, width, height) {\n        this.fillRectToContext(this.waveCtx, x, y, width, height);\n\n        if (this.hasProgressCanvas) {\n            this.fillRectToContext(this.progressCtx, x, y, width, height);\n        }\n    }\n\n    /**\n     * Draw the actual rectangle on a `canvas` element\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number} x X start position\n     * @param {number} y Y start position\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     */\n    fillRectToContext(ctx, x, y, width, height) {\n        if (!ctx) {\n            return;\n        }\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * Render the actual wave and progress lines\n     *\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLines(peaks, absmax, halfH, offsetY, start, end) {\n        this.drawLineToContext(\n            this.waveCtx,\n            peaks,\n            absmax,\n            halfH,\n            offsetY,\n            start,\n            end\n        );\n\n        if (this.hasProgressCanvas) {\n            this.drawLineToContext(\n                this.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        }\n    }\n\n    /**\n     * Render the actual waveform line on a `canvas` element\n     *\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Rendering context of target canvas\n     * @param {number[]} peaks Array with peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const first = Math.round(length * this.start);\n\n        // use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas\n        const last = Math.round(length * this.end) + 1;\n\n        const canvasStart = first;\n        const canvasEnd = last;\n        const scale = this.wave.width / (canvasEnd - canvasStart - 1);\n\n        // optimization\n        const halfOffset = halfH + offsetY;\n        const absmaxHalf = absmax / halfH;\n\n        ctx.beginPath();\n        ctx.moveTo((canvasStart - first) * scale, halfOffset);\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset - Math.round((peaks[2 * canvasStart] || 0) / absmaxHalf)\n        );\n\n        let i, peak, h;\n        for (i = canvasStart; i < canvasEnd; i++) {\n            peak = peaks[2 * i] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((i - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        // draw the bottom edge going backwards, to make a single\n        // closed hull to fill\n        let j = canvasEnd - 1;\n        for (j; j >= canvasStart; j--) {\n            peak = peaks[2 * j + 1] || 0;\n            h = Math.round(peak / absmaxHalf);\n            ctx.lineTo((j - first) * scale + this.halfPixel, halfOffset - h);\n        }\n\n        ctx.lineTo(\n            (canvasStart - first) * scale,\n            halfOffset -\n                Math.round((peaks[2 * canvasStart + 1] || 0) / absmaxHalf)\n        );\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Destroys this entry\n     */\n    destroy() {\n        this.waveCtx = null;\n        this.wave = null;\n\n        this.progressCtx = null;\n        this.progress = null;\n    }\n\n    /**\n     * Return image data of the wave `canvas` element\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise` that\n     * resolves with a `Blob` instance.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|Promise} When using the default `'dataURL'` `type` this\n     * returns a data URL. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with a `Blob` instance.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return new Promise(resolve => {\n                this.wave.toBlob(resolve, format, quality);\n            });\n        } else if (type === 'dataURL') {\n            return this.wave.toDataURL(format, quality);\n        }\n    }\n}\n","import * as util from './util';\n\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches\n            ? e.targetTouches[0].clientX\n            : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress =\n                (this.params.rtl ? bbox.right - clientX : clientX - bbox.left) *\n                    (this.params.pixelRatio / nominalWidth) || 0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress =\n                ((this.params.rtl\n                    ? bbox.right - clientX\n                    : clientX - bbox.left) +\n                    this.wrapper.scrollLeft) /\n                    this.wrapper.scrollWidth || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight =\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {object} buffer the buffer\n     */\n    drawPeaks(peaks, length, start, end, buffer) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        var visualization = this.params.visualization;\n        if (visualization === 'invisible') {\n            //draw nothing\n        } else if (visualization === 'spectrogram' && buffer) {\n            this.drawSpectrogram(buffer);\n        } else {\n            this.params.barWidth\n                ? this.drawBars(peaks, 0, start, end)\n                : this.drawWave(peaks, 0, start, end);\n        }\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the view-port at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the view-port on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            const rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number} Horizontal scroll position in pixels\n     */\n    getScrollX() {\n        let x = 0;\n        if (this.wrapper) {\n            const pixelRatio = this.params.pixelRatio;\n            x = Math.round(this.wrapper.scrollLeft * pixelRatio);\n\n            // In cases of elastic scroll (safari with mouse wheel) you can\n            // scroll beyond the limits of the container\n            // Calculate and floor the scrollable extent to make sure an out\n            // of bounds value is not returned\n            // Ticket #1312\n            if (this.params.scrollParent) {\n                const maxScroll = ~~(\n                    this.wrapper.scrollWidth * pixelRatio -\n                    this.getWidth()\n                );\n                x = Math.min(maxScroll, Math.max(0, x));\n            }\n        }\n        return x;\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number} The width of the container\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width The new width of the container\n     * @return {boolean} Whether the width of the container was updated or not\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height The new height of the container.\n     * @return {boolean} Whether the height of the container was updated or not\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be rendered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container) {\n                this.container.removeChild(this.wrapper);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n\n    drawSpectrogram(buffer) {\n      var pixelRatio = this.params.pixelRatio;\n      var length = buffer.duration;\n      var height = (this.height) * pixelRatio;\n      var frequenciesData = this.getFrequencies(buffer);\n\n      var pixels = this.resample(frequenciesData);\n\n      var heightFactor = pixelRatio;\n      var waveCc, offset;\n      for(var c = 0; c < this.canvases.length; c++){\n        offset = c ? this.canvases[c - 1].waveCtx.canvas.width : 0;\n        waveCc = this.canvases[c].waveCtx;\n        for (var i = 0; i < waveCc.canvas.width; i++) {\n          for (var j = 0; j < waveCc.canvas.height; j++) {\n            waveCc.fillStyle = this.getFrequencyRGB(pixels[i + offset][j]);\n            waveCc.fillRect(i, height - j * heightFactor, 1, heightFactor);\n          }\n        }\n      }\n    }\n}\n","import Drawer from './drawer';\nimport * as util from './util';\nimport CanvasEntry from './drawer.canvasentry';\n\n\n/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n */\n/* eslint-disable complexity, no-redeclare, no-var, one-var */\nconst FFT = function(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    var i;\n    switch (windowFunc) {\n        case 'bartlett':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (0.54 - 0.46) *\n                    Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n};\n\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole\n * builtin renderer.\n *\n * A `MultiCanvas` consists of one or more `CanvasEntry` instances, depending\n * on the zoom level.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n        \n        this.FFT = FFT;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is rendered. If the `waveColor`\n         * and `progressColor` are the same color it is not.\n         *\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n\n        /**\n         * List of `CanvasEntry` instances.\n         *\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        this.progressWave = null;\n\n        /**\n         * Class used to generate entries.\n         *\n         * @private\n         * @type {function}\n         */\n        this.EntryClass = CanvasEntry;\n\n        /**\n         * Overlap added between entries to prevent vertical white stripes\n         * between `canvas` elements.\n         *\n         * @type {number}\n         */\n        this.overlap = 2 * Math.ceil(params.pixelRatio / 2);\n    }\n\n    /**\n     * Initialize the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 3,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                pointerEvents: 'none'\n            })\n        );\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / (this.maxCanvasElementWidth + this.overlap)\n        );\n\n        // add required canvases\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        // remove older existing canvases, if any\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        let canvasWidth = this.maxCanvasWidth + this.overlap;\n        const lastCanvas = this.canvases.length - 1;\n        this.canvases.forEach((entry, i) => {\n            if (i == lastCanvas) {\n                canvasWidth = this.width - this.maxCanvasWidth * lastCanvas;\n            }\n            this.updateDimensions(entry, canvasWidth, this.height);\n\n            entry.clearWave();\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = new this.EntryClass();\n        entry.hasProgressCanvas = this.hasProgressCanvas;\n        entry.halfPixel = this.halfPixel;\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        // wave\n        entry.initWave(\n            this.wrapper.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    zIndex: 2,\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%',\n                    pointerEvents: 'none'\n                })\n            )\n        );\n\n        // progress\n        if (this.hasProgressCanvas) {\n            entry.initProgress(\n                this.progressWave.appendChild(\n                    this.style(document.createElement('canvas'), {\n                        position: 'absolute',\n                        left: leftOffset + 'px',\n                        top: 0,\n                        bottom: 0,\n                        height: '100%'\n                    })\n                )\n            );\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop single canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        let lastEntry = this.canvases[this.canvases.length - 1];\n\n        // wave\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n\n        // progress\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n\n        // cleanup\n        if (lastEntry) {\n            lastEntry.destroy();\n            lastEntry = null;\n        }\n\n        this.canvases.pop();\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry Target entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // update canvas dimensions\n        entry.updateDimensions(elementWidth, totalWidth, width, height);\n\n        // style element\n        this.style(this.progressWave, { display: 'block' });\n    }\n\n    /**\n     * Clear the whole multi-canvas\n     */\n    clearWave() {\n        this.canvases.forEach(entry => entry.clearWave());\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap =\n                    this.params.barGap === null\n                        ? Math.max(this.params.pixelRatio, ~~(bar / 2))\n                        : Math.max(\n                              this.params.pixelRatio,\n                              this.params.barGap * this.params.pixelRatio\n                          );\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i = first;\n\n                for (i; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    const h = Math.round((peak / absmax) * halfH);\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays\n     * for split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @returns {void}\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i = 0;\n                    for (i; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n                }\n\n                // always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peaks data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\n        this.canvases.forEach(entry => {\n            this.setFillStyles(entry);\n            entry.drawLines(peaks, absmax, halfH, offsetY, start, end);\n        });\n    }\n\n    /**\n     * Draw a rectangle on the multi-canvas\n     *\n     * @param {number} x X-position of the rectangle\n     * @param {number} y Y-position of the rectangle\n     * @param {number} width Width of the rectangle\n     * @param {number} height Height of the rectangle\n     */\n    fillRect(x, y, width, height) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i = startCanvas;\n        for (i; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.wave.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                entry.fillRects(\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1\n                );\n            }\n        }\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by `drawBars`\n     * and `drawWave`\n     *\n     * @private\n     * @param {number[]|Number.<Array[]>} peaks Can also be an array of arrays for\n     * split channel rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered. If this isn't set only a flat line is rendered\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call, e.g. `drawWave`\n     * @returns {void}\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(\n                        channels.length *\n                            this.params.height *\n                            this.params.pixelRatio\n                    );\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn)\n                    );\n                }\n                peaks = channels[0];\n            }\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * channelIndex || 0;\n            const halfH = height / 2;\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks\n            });\n        })();\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry Target entry\n     */\n    setFillStyles(entry) {\n        entry.setFillStyles(this.params.waveColor, this.params.progressColor);\n    }\n\n    /**\n     * Return image data of the multi-canvas\n     *\n     * When using a `type` of `'blob'`, this will return a `Promise`.\n     *\n     * @param {string} format='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @param {string} type='dataURL' Either 'dataURL' or 'blob'.\n     * @return {string|string[]|Promise} When using the default `'dataURL'`\n     * `type` this returns a single data URL or an array of data URLs,\n     * one for each canvas. When using the `'blob'` `type` this returns a\n     * `Promise` that resolves with an array of `Blob` instances, one for each\n     * canvas.\n     */\n    getImage(format, quality, type) {\n        if (type === 'blob') {\n            return Promise.all(\n                this.canvases.map(entry => {\n                    return entry.getImage(format, quality, type);\n                })\n            );\n        } else if (type === 'dataURL') {\n            let images = this.canvases.map(entry =>\n                entry.getImage(format, quality, type)\n            );\n            return images.length > 1 ? images : images[0];\n        }\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n\n    getFrequencyRGB(colorValue) {\n        if (this.params.colorMap) {\n            // If the wavesurfer has a specified colour map\n            var rgb = colormaps[this.params.colorMap][colorValue];\n            return 'rgb(' + rgb[0]*256 + ',' + rgb[1]*256 + ',' + rgb[2]*256 + ')';\n        } else {\n            // If not just use gray scale\n            return 'rgb(' + colorValue + ',' + colorValue + ',' + colorValue + ')';\n        }\n\n    }\n\n    getFrequencies(buffer) {\n      var fftSamples = this.params.fftSamples || 512;\n      var channelOne = Array.prototype.slice.call(buffer.getChannelData(0));\n      var bufferLength = buffer.length;\n      var sampleRate = buffer.sampleRate;\n      var frequencies = [];\n\n      if (! buffer) {\n        this.fireEvent('error', 'Web Audio buffer is not available');\n        return;\n      }\n\n      var noverlap = this.params.noverlap;\n      if (! noverlap) {\n        var uniqueSamplesPerPx = buffer.length / this.width;\n        noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n      }\n\n      var fft = new this.FFT(fftSamples, sampleRate);\n\n      var maxSlicesCount = Math.floor(bufferLength/ (fftSamples - noverlap));\n\n      var currentOffset = 0;\n\n      while (currentOffset + fftSamples < channelOne.length) {\n        var segment = channelOne.slice(currentOffset, currentOffset + fftSamples);\n        var spectrum = fft.calculateSpectrum(segment);\n        var length = fftSamples / 2 + 1;\n        var array = new Uint8Array(length);\n        for (var j = 0; j < length; j++) {\n          array[j] = Math.max(-255, Math.log10(spectrum[j])*45);\n        }\n        frequencies.push(array);\n        currentOffset += (fftSamples - noverlap);\n      }\n\n      return frequencies;\n    }\n\n    resample(oldMatrix) {\n      var columnsNumber = this.width;\n      var newMatrix = [];\n\n      var oldPiece = 1 / oldMatrix.length;\n      var newPiece = 1 / columnsNumber;\n\n      for (var i = 0; i < columnsNumber; i++) {\n        var column = new Array(oldMatrix[0].length);\n\n        for (var j = 0; j < oldMatrix.length; j++) {\n          var oldStart = j * oldPiece;\n          var oldEnd = oldStart + oldPiece;\n          var newStart = i * newPiece;\n          var newEnd = newStart + newPiece;\n\n          var overlap = (oldEnd <= newStart || newEnd <= oldStart) ?\n            0 :\n            Math.min(Math.max(oldEnd, newStart), Math.max(newEnd, oldStart)) -\n            Math.max(Math.min(oldEnd, newStart), Math.min(newEnd, oldStart));\n\n          if (overlap > 0) {\n            for (var k = 0; k < oldMatrix[0].length; k++) {\n              if (column[k] == null) {\n                column[k] = 0;\n              }\n              column[k] += (overlap / newPiece) * oldMatrix[j][k];\n            }\n          }\n        }\n\n        var intColumn = new Uint8Array(oldMatrix[0].length);\n\n        for (var k = 0; k < oldMatrix[0].length; k++) {\n          intColumn[k] = column[k];\n        }\n\n        newMatrix.push(intColumn);\n      }\n\n      return newMatrix;\n    }\n}\n","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {},\n            volume: 0\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.volume = 1;\n        /** @private */\n        this.isMuted = false;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     *\n     * @private\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            util.frame(onAudioProcess)();\n        };\n\n        this.on('play', onAudioProcess);\n\n        // Update the progress one more time to prevent it from being stuck in\n        // case of lower framerates\n        this.on('pause', () => {\n            this.fireEvent('audioprocess', this.getCurrentTime());\n        });\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     * Private method called by both `load` (from url)\n     * and `loadElt` (existing media element) methods.\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|Number.<Array[]>} peaks Array of peak data\n     * @private\n     */\n    _load(media, peaks) {\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        media.addEventListener('error', () => {\n            this.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', () => {\n            this.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', () => {\n            this.fireEvent('finish');\n        });\n\n        // Listen to and relay play, pause and seeked events to enable\n        // playback control from the external media element\n        media.addEventListener('play', () => {\n            this.fireEvent('play');\n        });\n\n        media.addEventListener('pause', () => {\n            this.fireEvent('pause');\n        });\n\n        media.addEventListener('seeked', event => {\n            this.fireEvent('seek');\n        });\n\n        media.addEventListener('volumechange', event => {\n            this.isMuted = media.muted;\n            if (this.isMuted) {\n                this.volume = 0;\n            } else {\n                this.volume = media.volume;\n            }\n            this.fireEvent('volume');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.isMuted = media.muted;\n        this.setPlaybackRate(this.playbackRate);\n        this.setVolume(this.volume);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Media paused or not\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} Current time\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Current position\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number} Playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value Playback rate\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop, relative to the beginning of a clip.\n     * @emits MediaElement#play\n     * @return {Promise} Result\n     */\n    play(start, end) {\n        this.seekTo(start);\n        const promise = this.media.play();\n        end && this.setPlayEnd(end);\n\n        return promise;\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     * @return {Promise} Result\n     */\n    pause() {\n        let promise;\n\n        if (this.media) {\n            promise = this.media.pause();\n        }\n        this.clearPlayEnd();\n\n        return promise;\n    }\n\n    /**\n     * Set the play end\n     *\n     * @private\n     * @param {number} end Where to end\n     */\n    setPlayEnd(end) {\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            if (!this.media.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            return this.media.setSinkId(deviceId);\n        }\n\n        return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.volume = value;\n        // no need to change when it's already at that volume\n        if (this.media.volume !== this.volume) {\n            this.media.volume = this.volume;\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n","/**\n * Caches the decoded peaks data to improve rendering speed for large audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {Number.<Array[]>} Array with arrays of numbers\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n","import Observer from './observer';\n\n/**\n * Perform an ajax request using `XMLHttpRequest`.\n *\n * @deprecated Use `util.fetchFile` instead.\n *\n * @param {Object} options AJAX options to use. See example below for options.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     method: 'GET',\n *     url: undefined,\n *     responseType: 'json',\n *     xhr: {}\n * };\n *\n * // override default options\n * options.url = '../media/demo.wav';\n * options.responseType = 'arraybuffer';\n * options.xhr = {\n *     requestHeaders: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ],\n *     withCredentials: true\n * };\n *\n * // make ajax call\n * let ajaxCall = util.ajax(options);\n * ajaxCall.on('progress', e => {\n *     console.log('progress', e);\n * });\n * ajaxCall.on('success', (data, e) => {\n *     console.log('success!', data);\n * });\n * ajaxCall.on('error', e => {\n *     console.warn('ajax error: ' + e.target.statusText);\n * });\n */\nexport default function ajax(options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n\n    if (options.xhr) {\n        if (options.xhr.requestHeaders) {\n            // add custom request headers\n            options.xhr.requestHeaders.forEach(header => {\n                xhr.setRequestHeader(header.key, header.value);\n            });\n        }\n        if (options.xhr.withCredentials) {\n            // use credentials\n            xhr.withCredentials = true;\n        }\n    }\n\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n","/**\n * Extend an object shallowly with others\n *\n * @param {Object} dest The target object\n * @param {Object[]} sources The objects to use for extending\n *\n * @return {Object} Merged object\n */\nexport default function extend(dest, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n","/**\n * @since 3.0.0\n */\n\nimport Observer from './observer';\n\nclass ProgressHandler {\n    /**\n     * Instantiate ProgressHandler\n     *\n     * @param {Observer} instance The `fetchFile` observer instance.\n     * @param {Number} contentLength Content length.\n     * @param {Response} response Response object.\n     */\n    constructor(instance, contentLength, response) {\n        this.instance = instance;\n        this.instance._reader = response.body.getReader();\n\n        this.total = parseInt(contentLength, 10);\n        this.loaded = 0;\n    }\n\n    /**\n     * A method that is called once, immediately after the `ReadableStream``\n     * is constructed.\n     *\n     * @param {ReadableStreamDefaultController} controller Controller instance\n     *     used to control the stream.\n     */\n    start(controller) {\n        const read = () => {\n            // instance._reader.read() returns a promise that resolves\n            // when a value has been received\n            this.instance._reader\n                .read()\n                .then(({ done, value }) => {\n                    // result objects contain two properties:\n                    // done  - true if the stream has already given you all its data.\n                    // value - some data. Always undefined when done is true.\n                    if (done) {\n                        // ensure onProgress called when content-length=0\n                        if (this.total === 0) {\n                            this.instance.onProgress.call(this.instance, {\n                                loaded: this.loaded,\n                                total: this.total,\n                                lengthComputable: false\n                            });\n                        }\n                        // no more data needs to be consumed, close the stream\n                        controller.close();\n                        return;\n                    }\n\n                    this.loaded += value.byteLength;\n                    this.instance.onProgress.call(this.instance, {\n                        loaded: this.loaded,\n                        total: this.total,\n                        lengthComputable: !(this.total === 0)\n                    });\n                    // enqueue the next data chunk into our target stream\n                    controller.enqueue(value);\n                    read();\n                })\n                .catch(error => {\n                    controller.error(error);\n                });\n        };\n\n        read();\n    }\n}\n\n/**\n * Load a file using `fetch`.\n *\n * @param {object} options Request options to use. See example below.\n * @returns {Observer} Observer instance\n * @example\n * // default options\n * let options = {\n *     url: undefined,\n *     method: 'GET',\n *     mode: 'cors',\n *     credentials: 'same-origin',\n *     cache: 'default',\n *     responseType: 'json',\n *     requestHeaders: [],\n *     redirect: 'follow',\n *     referrer: 'client'\n * };\n *\n * // override some options\n * options.url = '../media/demo.wav';\n\n * // available types: 'arraybuffer', 'blob', 'json' or 'text'\n * options.responseType = 'arraybuffer';\n *\n * // make fetch call\n * let request = util.fetchFile(options);\n *\n * // listen for events\n * request.on('progress', e => {\n *     console.log('progress', e);\n * });\n *\n * request.on('success', data => {\n *     console.log('success!', data);\n * });\n *\n * request.on('error', e => {\n *     console.warn('fetchFile error: ', e);\n * });\n */\nexport default function fetchFile(options) {\n    if (!options) {\n        throw new Error('fetch options missing');\n    } else if (!options.url) {\n        throw new Error('fetch url missing');\n    }\n    const instance = new Observer();\n    const fetchHeaders = new Headers();\n    const fetchRequest = new Request(options.url);\n\n    // add ability to abort\n    instance.controller = new AbortController();\n\n    // check if headers have to be added\n    if (options && options.requestHeaders) {\n        // add custom request headers\n        options.requestHeaders.forEach(header => {\n            fetchHeaders.append(header.key, header.value);\n        });\n    }\n\n    // parse fetch options\n    const responseType = options.responseType || 'json';\n    const fetchOptions = {\n        method: options.method || 'GET',\n        headers: fetchHeaders,\n        mode: options.mode || 'cors',\n        credentials: options.credentials || 'same-origin',\n        cache: options.cache || 'default',\n        redirect: options.redirect || 'follow',\n        referrer: options.referrer || 'client',\n        signal: instance.controller.signal\n    };\n\n    fetch(fetchRequest, fetchOptions)\n        .then(response => {\n            // store response reference\n            instance.response = response;\n\n            let progressAvailable = true;\n            if (!response.body) {\n                // ReadableStream is not yet supported in this browser\n                // see https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream\n                progressAvailable = false;\n            }\n\n            // Server must send CORS header \"Access-Control-Expose-Headers: content-length\"\n            const contentLength = response.headers.get('content-length');\n            if (contentLength === null) {\n                // Content-Length server response header missing.\n                // Don't evaluate download progress if we can't compare against a total size\n                // see https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Access-Control-Expose-Headers\n                progressAvailable = false;\n            }\n\n            if (!progressAvailable) {\n                // not able to check download progress so skip it\n                return response;\n            }\n\n            // fire progress event when during load\n            instance.onProgress = e => {\n                instance.fireEvent('progress', e);\n            };\n\n            return new Response(\n                new ReadableStream(\n                    new ProgressHandler(instance, contentLength, response)\n                ),\n                fetchOptions\n            );\n        })\n        .then(response => {\n            let errMsg;\n            if (response.ok) {\n                switch (responseType) {\n                    case 'arraybuffer':\n                        return response.arrayBuffer();\n\n                    case 'json':\n                        return response.json();\n\n                    case 'blob':\n                        return response.blob();\n\n                    case 'text':\n                        return response.text();\n\n                    default:\n                        errMsg = 'Unknown responseType: ' + responseType;\n                        break;\n                }\n            }\n            if (!errMsg) {\n                errMsg = 'HTTP error status: ' + response.status;\n            }\n            throw new Error(errMsg);\n        })\n        .then(response => {\n            instance.fireEvent('success', response);\n        })\n        .catch(error => {\n            instance.fireEvent('error', error);\n        });\n\n    // return the fetch request\n    instance.fetchRequest = fetchRequest;\n    return instance;\n}\n","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n","/**\n * Get a random prefixed ID\n *\n * @param {String} prefix Prefix to use. Default is `'wavesurfer_'`.\n * @returns {String} Random prefixed ID\n * @example\n * console.log(getId()); // logs 'wavesurfer_b5pors4ru6g'\n *\n * let prefix = 'foo-';\n * console.log(getId(prefix)); // logs 'foo-b5pors4ru6g'\n */\nexport default function getId(prefix) {\n    if (prefix === undefined) {\n        prefix = 'wavesurfer_';\n    }\n    return (\n        prefix +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\nexport { default as preventClick } from './prevent-click';\nexport { default as fetchFile } from './fetch';\n","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n * @example console.log(max([1, 2, 3])); // logs 3\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Smallest number found\n * @example console.log(min([1, 2, 3])); // logs 1\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor} The event descriptor\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers) {\n            return;\n        }\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n","/**\n * Stops propagation of click event and removes event listener\n *\n * @private\n * @param {object} event The click event\n */\nfunction preventClickHandler(event) {\n    event.stopPropagation();\n    document.body.removeEventListener('click', preventClickHandler, true);\n}\n\n/**\n * Starts listening for click event and prevent propagation\n *\n * @param {object} values Values\n */\nexport default function preventClick(values) {\n    document.body.addEventListener('click', preventClickHandler, true);\n}\n","/* eslint-disable valid-jsdoc */\n/**\n * Returns the `requestAnimationFrame` function for the browser, or a shim with\n * `setTimeout` if the function is not found\n *\n * @return {function} Available `requestAnimationFrame` function for the browser\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {ScriptProcessorNode} audioScriptProcessor=null Use your own previously\n * initialized ScriptProcessorNode or leave blank.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {string} backgroundColor=null Change background color of the\n * waveform container.\n * @property {number} barHeight=1 The height of the wave bars.\n * @property {number} barGap=null The optional spacing between bars of the wave,\n * if not provided will be calculated in legacy format.\n * @property {number} barWidth=null Draw the waveform using bars.\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {number} duration=null Optional audio length so pre-rendered peaks\n * can be display immediately for example.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor. When `progressColor` and `waveColor` are the same\n * the progress wave is not rendered at all.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} rtl=false If set to `true`, renders waveform from\n * right-to-left.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with separate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n * @property {object} xhr={} XHR options. For example:\n * `let xhr = {\n *     cache: 'default',\n *     mode: 'cors',\n *     method: 'GET',\n *     credentials: 'same-origin',\n *     redirect: 'follow',\n *     referrer: 'client',\n *     headers: [\n *         {\n *             key: 'Authorization',\n *             value: 'my-token'\n *         }\n *     ]\n * };`\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * It returns a `PluginDefinition` object representing the plugin.\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     * @param {Object} ws The wavesurfer instance\n     */\n    constructor(params, ws) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioScriptProcessor: null,\n        audioRate: 1,\n        autoCenter: true,\n        backend: 'WebAudio',\n        backgroundColor: null,\n        barHeight: 1,\n        barGap: null,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        duration: null,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        rtl: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        waveColor: '#999',\n        xhr: {}\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params The wavesurfer parameters\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * The library version number is available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {String}\n     * @example\n     * console.log('Using wavesurfer.js ' + WaveSurfer.VERSION);\n     */\n    static VERSION = __VERSION__;\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this} Wavesurfer instance\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = util.extend({}, this.defaultParams, params);\n\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        if (this.params.rtl === true) {\n            util.style(this.container, { transform: 'rotateY(180deg)' });\n        }\n\n        if (this.params.backgroundColor) {\n            this.setBackgroundColor(this.params.backgroundColor);\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * canceled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentRequest = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n\n        /**\n         * Get the current ready status.\n         *\n         * @example const isReady = wavesurfer.isReady;\n         * @return {boolean}\n         */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(\n            () => {\n                if (\n                    prevWidth != this.drawer.wrapper.clientWidth &&\n                    !this.params.scrollParent\n                ) {\n                    prevWidth = this.drawer.wrapper.clientWidth;\n                    this.drawer.fireEvent('redraw');\n                }\n            },\n            typeof this.params.responsive === 'number'\n                ? this.params.responsive\n                : 100\n        );\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this} The wavesurfer instance\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this} The wavesurfer instance\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Get a map of plugin names that are currently initialised\n     *\n     * @example wavesurfer.getPlugins();\n     * @return {Object} Object with plugin names\n     */\n    getActivePlugins() {\n        return this.initialisedPluginList;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this} The wavesurfer instance\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this} The wavesurfer instance\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this} The wavesurfer instance\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            this.params.backend == 'WebAudio' &&\n            !this.Backend.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('finish');\n        });\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n\n        // only needed for MediaElement backend\n        if (this.params.backend === 'MediaElement') {\n            this.backend.on('seek', () => {\n                this.drawer.progress(this.backend.getPlayedPercents());\n            });\n\n            this.backend.on('volume', () => {\n                let newVolume = this.getVolume();\n                this.fireEvent('volume', newVolume);\n\n                if (this.backend.isMuted !== this.isMuted) {\n                    this.isMuted = this.backend.isMuted;\n                    this.fireEvent('mute', this.isMuted);\n                }\n            });\n        }\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (seconds >= this.getDuration()) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @return {Promise} Result of the backend play method\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        return this.backend.play(start, end);\n    }\n\n    /**\n     * Stops and pauses playback\n     *\n     * @example wavesurfer.pause();\n     * @return {Promise} Result of the backend pause method\n     */\n    pause() {\n        if (!this.backend.isPaused()) {\n            return this.backend.pause();\n        }\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     * @return {Promise} Result of the backend play or pause method\n     */\n    playPause() {\n        return this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            throw new Error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Sets the ID of the audio device to use for output and returns a Promise.\n     *\n     * @param {string} deviceId String value representing underlying output\n     * device\n     * @returns {Promise} `Promise` that resolves to `undefined` when there are\n     * no errors detected.\n     */\n    setSinkId(deviceId) {\n        return this.backend.setSinkId(deviceId);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     * @emits WaveSurfer#volume\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n        this.fireEvent('volume', newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number} The current playback rate.\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. If not currently muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute Specify `true` to mute audio.\n     * @emits WaveSurfer#volume\n     * @emits WaveSurfer#mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     * console.log(wavesurfer.getMute()) // logs false\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            this.fireEvent('mute', this.isMuted);\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n            this.fireEvent('volume', 0);\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n            this.fireEvent('volume', this.savedVolume);\n        }\n        this.fireEvent('mute', this.isMuted);\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean} Current mute status\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array} List of enabled filters\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the background color of the waveform container.\n     *\n     * @return {string} A CSS color string.\n     */\n    getBackgroundColor() {\n        return this.params.backgroundColor;\n    }\n\n    /**\n     * Set the background color of the waveform container.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setBackgroundColor('#FF00FF');\n     */\n    setBackgroundColor(color) {\n        this.params.backgroundColor = color;\n        util.style(this.container, { background: this.params.backgroundColor });\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave view-port and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() * this.params.minPxPerSec * this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        // always start at 0 after zooming for scrolling : issue redraw left part\n        let start = 0;\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (this.params.fillParent && (!this.params.scrollParent || nominalWidth < parentWidth)) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(width, start, end);\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(width, newRanges[i][0], newRanges[i][1], this.backend.buffer);\n                this.drawer.drawPeaks(peaks, width, newRanges[i][0], newRanges[i][1], this.backend.buffer);\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end, this.backend.buffer);\n            this.drawer.drawPeaks(peaks, width, start, end, this.backend.buffer);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer Buffer to process\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer Buffer to process\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n        this.isReady = true;\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {number[]|Number.<Array[]>} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current `minPxPerSec` and zoom value) without having to decode\n     * the audio.\n     * @returns {void}\n     * @example\n     * // uses fetch or media element to load file (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * // peaks\n     * wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        this.empty();\n\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                'Backend is not of type MediaElement':\n                    this.params.backend !== 'MediaElement',\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                // eslint-disable-next-line no-console\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url URL of audio file\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Optional duration of audio file\n     * @returns {void}\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|Number.<Array[]>} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration Optional duration of audio file\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                this.drawBuffer();\n                this.fireEvent('ready');\n                this.isReady = true;\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n        }\n\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer using fetch and pass the result to a callback\n     *\n     * @param {string} url The URL of the file object\n     * @param {function} callback The function to call on complete\n     * @returns {util.fetchFile} fetch call\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        let options = util.extend(\n            {\n                url: url,\n                responseType: 'arraybuffer'\n            },\n            this.params.xhr\n        );\n        const request = util.fetchFile(options);\n\n        this.currentRequest = request;\n\n        this.tmpEvents.push(\n            request.on('progress', e => {\n                this.onProgress(e);\n            }),\n            request.on('success', data => {\n                callback(data);\n                this.currentRequest = null;\n            }),\n            request.on('error', e => {\n                this.fireEvent('error', 'fetch error: ' + e.message);\n                this.currentRequest = null;\n            })\n        );\n\n        return request;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e Progress event\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n     * @param {number} accuracy=10000 (Integer)\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start Start index\n     * @todo Update exportPCM to work with new getPeaks signature\n     * @return {string} JSON of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n        const json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open(\n                'data:application/json;charset=utf-8,' +\n                    encodeURIComponent(json)\n            );\n        }\n        return json;\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `'image/png'`. Other supported types are\n     * `'image/jpeg'` and `'image/webp'`.\n     *\n     * @param {string} format='image/png' A string indicating the image format.\n     * The default format type is `'image/png'`.\n     * @param {number} quality=1 A number between 0 and 1 indicating the image\n     * quality to use for image formats that use lossy compression such as\n     * `'image/jpeg'`` and `'image/webp'`.\n     * @param {string} type Image data type to return. Either 'dataURL' (default)\n     * or 'blob'.\n     * @return {string|string[]|Promise} When using `'dataURL'` type this returns\n     * a single data URL or an array of data URLs, one for each canvas. When using\n     * `'blob'` type this returns a `Promise` resolving with an array of `Blob`\n     * instances, one for each canvas.\n     */\n    exportImage(format, quality, type) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n        if (!type) {\n            type = 'dataURL';\n        }\n\n        return this.drawer.getImage(format, quality, type);\n    }\n\n    /**\n     * Cancel any fetch request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentRequest && this.currentRequest.controller) {\n            this.currentRequest.controller.abort();\n            this.currentRequest = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.isReady = false;\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n        this.isReady = false;\n        this.arraybuffer = null;\n    }\n}\n","import * as util from './util';\n\n// using constants to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** @private */\n    static scriptBufferSize = 256;\n    /** @private */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean} Whether or not this browser supports this backend\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext} Existing audio context, or creates a new one\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate The sample rate to use\n     * @return {OfflineAudioContext} Existing offline audio context, or creates\n     * a new one\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params Wavesurfer parameters\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.ac =\n            params.audioContext ||\n            (this.supportsWebAudio() ? this.getAudioContext() : {});\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private  */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** @private */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = params.duration;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /**\n     * @private\n     *\n     * @param {string} state The new state\n     */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters One or more filters to set\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    createScriptNode() {\n        if (this.params.audioScriptProcessor) {\n            this.scriptNode = this.params.audioScriptProcessor;\n        } else {\n            if (this.ac.createScriptProcessor) {\n                this.scriptNode = this.ac.createScriptProcessor(\n                    WebAudio.scriptBufferSize\n                );\n            } else {\n                this.scriptNode = this.ac.createJavaScriptNode(\n                    WebAudio.scriptBufferSize\n                );\n            }\n        }\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {};\n    }\n\n    /** @private */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     * @private\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the sink id for the media player\n     *\n     * @param {string} deviceId String value representing audio device id.\n     * @returns {Promise} A Promise that resolves to `undefined` when there\n     * are no errors.\n     */\n    setSinkId(deviceId) {\n        if (deviceId) {\n            /**\n             * The webaudio API doesn't currently support setting the device\n             * output. Here we create an HTMLAudioElement, connect the\n             * webaudio stream to that element and setSinkId there.\n             */\n            let audio = new window.Audio();\n            if (!audio.setSinkId) {\n                return Promise.reject(\n                    new Error('setSinkId is not supported in your browser')\n                );\n            }\n            audio.autoplay = true;\n            var dest = this.ac.createMediaStreamDestination();\n            this.gainNode.disconnect();\n            this.gainNode.connect(dest);\n            audio.srcObject = dest.stream;\n\n            return audio.setSinkId(deviceId);\n        } else {\n            return Promise.reject(new Error('Invalid deviceId: ' + deviceId));\n        }\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.setValueAtTime(value, this.ac.currentTime);\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer The array buffer to decode\n     * @param {function} callback The function to call on complete.\n     * @param {function} errback The function to call on error.\n     */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac && this.ac.sampleRate ? this.ac.sampleRate : 44100\n            );\n        }\n        this.offlineAc.decodeAudioData(\n            arraybuffer,\n            data => callback(data),\n            errback\n        );\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|Number.<Array[]>} peaks Peaks data\n     * @param {?number} duration Explicit duration\n     */\n    setPeaks(peaks, duration) {\n        if (duration != null) {\n            this.explicitDuration = duration;\n        }\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio)\n     *\n     * @param {number} length The rendered length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|Number.<Array[]>} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n        if (!this.buffer) {\n            return [];\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        if (!this.buffer) {\n            return this.params.splitChannels\n                ? this.splitPeaks\n                : this.mergedPeaks;\n        }\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                let min = 0;\n                let max = 0;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number} Position\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer Decoded audio buffer to load\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        // adjust for old browsers\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.setValueAtTime(\n            this.playbackRate,\n            this.ac.currentTime\n        );\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean} Whether or not this backend is currently paused\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number} Duration of loaded buffer\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        if (!this.buffer) {\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}} Object containing start and end\n     * positions\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number} The playback position in seconds\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audio-clip's\n     * duration.\n     *\n     * @return {number} The current time in seconds\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number} The current playback rate\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value The playback rate to use\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n}\n"],"sourceRoot":""}